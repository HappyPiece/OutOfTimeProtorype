// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OutOfTimePrototype.DAL;

#nullable disable

namespace OutOfTimePrototype.Migrations
{
    [DbContext(typeof(OutOfTimeDbContext))]
    [Migration("20230219170244_Add User-related Models")]
    partial class AddUserrelatedModels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OutOfTimePrototype.DAL.Models.CampusBuilding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CampusBuildings");
                });

            modelBuilder.Entity("OutOfTimePrototype.DAL.Models.Class", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ClusterNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("EducatorId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("LectureHallId")
                        .HasColumnType("uuid");

                    b.Property<int>("TimeSlotNumber")
                        .HasColumnType("integer");

                    b.Property<string>("TypeName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ClusterNumber");

                    b.HasIndex("EducatorId");

                    b.HasIndex("LectureHallId");

                    b.HasIndex("TimeSlotNumber");

                    b.HasIndex("TypeName");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("OutOfTimePrototype.DAL.Models.ClassType", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.ToTable("ClassTypes");

                    b.HasData(
                        new
                        {
                            Name = "Practice"
                        },
                        new
                        {
                            Name = "Lecture"
                        },
                        new
                        {
                            Name = "Seminar"
                        },
                        new
                        {
                            Name = "Laboratory"
                        },
                        new
                        {
                            Name = "Exam"
                        });
                });

            modelBuilder.Entity("OutOfTimePrototype.DAL.Models.Cluster", b =>
                {
                    b.Property<string>("Number")
                        .HasColumnType("text");

                    b.Property<string>("SuperClusterNumber")
                        .HasColumnType("text");

                    b.HasKey("Number");

                    b.HasIndex("SuperClusterNumber");

                    b.ToTable("Clusters");

                    b.HasData(
                        new
                        {
                            Number = "9721"
                        });
                });

            modelBuilder.Entity("OutOfTimePrototype.DAL.Models.Educator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Educators");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bf5d33dd-6ccd-436f-a26d-d4ab81c1c11e"),
                            FirstName = "Educator",
                            LastName = "Educatorov",
                            MiddleName = "Educatorovich"
                        },
                        new
                        {
                            Id = new Guid("4570a206-d5f0-4b76-85a1-ed13a6fe58f2"),
                            FirstName = "Prepod",
                            LastName = "Prepodov",
                            MiddleName = "Prepodovich"
                        });
                });

            modelBuilder.Entity("OutOfTimePrototype.DAL.Models.LectureHall", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Capacity")
                        .HasColumnType("integer");

                    b.Property<Guid>("HostBuildingId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("HostBuildingId");

                    b.ToTable("LectureHalls");
                });

            modelBuilder.Entity("OutOfTimePrototype.DAL.Models.TimeSlot", b =>
                {
                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Number"));

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Number");

                    b.ToTable("TimeSlots");

                    b.HasData(
                        new
                        {
                            Number = 1,
                            EndTime = new DateTime(2023, 2, 20, 3, 20, 0, 0, DateTimeKind.Utc),
                            StartTime = new DateTime(2023, 2, 20, 1, 45, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Number = 2,
                            EndTime = new DateTime(2023, 2, 20, 5, 10, 0, 0, DateTimeKind.Utc),
                            StartTime = new DateTime(2023, 2, 20, 3, 35, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Number = 3,
                            EndTime = new DateTime(2023, 2, 20, 7, 0, 0, 0, DateTimeKind.Utc),
                            StartTime = new DateTime(2023, 2, 20, 5, 25, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Number = 4,
                            EndTime = new DateTime(2023, 2, 20, 9, 20, 0, 0, DateTimeKind.Utc),
                            StartTime = new DateTime(2023, 2, 20, 7, 45, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Number = 5,
                            EndTime = new DateTime(2023, 2, 20, 11, 10, 0, 0, DateTimeKind.Utc),
                            StartTime = new DateTime(2023, 2, 20, 9, 35, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Number = 6,
                            EndTime = new DateTime(2023, 2, 20, 13, 0, 0, 0, DateTimeKind.Utc),
                            StartTime = new DateTime(2023, 2, 20, 11, 25, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Number = 7,
                            EndTime = new DateTime(2023, 2, 20, 14, 50, 0, 0, DateTimeKind.Utc),
                            StartTime = new DateTime(2023, 2, 20, 13, 15, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("OutOfTimePrototype.Dal.Models.Subject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("OutOfTimePrototype.Dal.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int[]>("ClaimedRoles")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("text");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int[]>("VerifiedRoles")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("OutOfTimePrototype.Dal.Models.AdminUser", b =>
                {
                    b.HasBaseType("OutOfTimePrototype.Dal.Models.User");

                    b.Property<string>("FirstName")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("AdminUser");
                });

            modelBuilder.Entity("OutOfTimePrototype.Dal.Models.EducatorUser", b =>
                {
                    b.HasBaseType("OutOfTimePrototype.Dal.Models.User");

                    b.Property<string>("FirstName")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("text");

                    b.Property<Guid?>("ScheduleSelfId")
                        .HasColumnType("uuid");

                    b.HasIndex("ScheduleSelfId");

                    b.HasDiscriminator().HasValue("EducatorUser");
                });

            modelBuilder.Entity("OutOfTimePrototype.Dal.Models.ScheduleBureauUser", b =>
                {
                    b.HasBaseType("OutOfTimePrototype.Dal.Models.User");

                    b.Property<string>("FirstName")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("ScheduleBureauUser");
                });

            modelBuilder.Entity("OutOfTimePrototype.Dal.Models.StudentUser", b =>
                {
                    b.HasBaseType("OutOfTimePrototype.Dal.Models.User");

                    b.Property<string>("ClusterNumber")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("text");

                    b.Property<string>("GradeBookNumber")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("text");

                    b.HasIndex("ClusterNumber");

                    b.HasDiscriminator().HasValue("StudentUser");
                });

            modelBuilder.Entity("OutOfTimePrototype.DAL.Models.Class", b =>
                {
                    b.HasOne("OutOfTimePrototype.DAL.Models.Cluster", "Cluster")
                        .WithMany()
                        .HasForeignKey("ClusterNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OutOfTimePrototype.DAL.Models.Educator", "Educator")
                        .WithMany()
                        .HasForeignKey("EducatorId");

                    b.HasOne("OutOfTimePrototype.DAL.Models.LectureHall", "LectureHall")
                        .WithMany()
                        .HasForeignKey("LectureHallId");

                    b.HasOne("OutOfTimePrototype.DAL.Models.TimeSlot", "TimeSlot")
                        .WithMany()
                        .HasForeignKey("TimeSlotNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OutOfTimePrototype.DAL.Models.ClassType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeName");

                    b.Navigation("Cluster");

                    b.Navigation("Educator");

                    b.Navigation("LectureHall");

                    b.Navigation("TimeSlot");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("OutOfTimePrototype.DAL.Models.Cluster", b =>
                {
                    b.HasOne("OutOfTimePrototype.DAL.Models.Cluster", "SuperCluster")
                        .WithMany()
                        .HasForeignKey("SuperClusterNumber");

                    b.Navigation("SuperCluster");
                });

            modelBuilder.Entity("OutOfTimePrototype.DAL.Models.LectureHall", b =>
                {
                    b.HasOne("OutOfTimePrototype.DAL.Models.CampusBuilding", "HostBuilding")
                        .WithMany("LectureHalls")
                        .HasForeignKey("HostBuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HostBuilding");
                });

            modelBuilder.Entity("OutOfTimePrototype.Dal.Models.EducatorUser", b =>
                {
                    b.HasOne("OutOfTimePrototype.DAL.Models.Educator", "ScheduleSelf")
                        .WithMany()
                        .HasForeignKey("ScheduleSelfId");

                    b.Navigation("ScheduleSelf");
                });

            modelBuilder.Entity("OutOfTimePrototype.Dal.Models.StudentUser", b =>
                {
                    b.HasOne("OutOfTimePrototype.DAL.Models.Cluster", "Cluster")
                        .WithMany()
                        .HasForeignKey("ClusterNumber");

                    b.Navigation("Cluster");
                });

            modelBuilder.Entity("OutOfTimePrototype.DAL.Models.CampusBuilding", b =>
                {
                    b.Navigation("LectureHalls");
                });
#pragma warning restore 612, 618
        }
    }
}
